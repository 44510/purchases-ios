workflows:
  version: 2
  generate-snapshot:
    when: << pipeline.parameters.generate_snapshots >>
    jobs:
      - run-test-ios-17:
          xcode_version: "15.2"
      - run-test-ios-16:
          xcode_version: '14.3.0'
          install_swiftlint: false
          <<: *release-branches
      - run-test-ios-15:
          xcode_version: '14.3.0'
          install_swiftlint: false
          <<: *release-branches
      - run-test-ios-14:
          xcode_version: '14.2.0'
          install_swiftlint: false
          <<: *release-branches
      - run-test-ios-13:
          xcode_version: '14.2.0'
          install_swiftlint: false
          <<: *release-branches
      - run-test-macos:
          <<: *release-branches

  generate_revenuecatui_snapshots:
    when: << pipeline.parameters.generate_revenuecatui_snapshots >>
    jobs:
      - spm-revenuecat-ui-ios-15:
          xcode_version: '14.3.0'
          install_swiftlint: false
          <<: *release-branches
      - spm-revenuecat-ui-ios-16:
          xcode_version: '14.3.0'
          install_swiftlint: false
          <<: *release-branches
      - spm-revenuecat-ui-ios-17:
          xcode_version: "15.2"

  build-test:
    when:
      and:
        - not:
            equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - not: << pipeline.parameters.generate_snapshots >>
        - not: << pipeline.parameters.generate_revenuecatui_snapshots >>
    jobs:
      # mandatory jobs
      - lint
      - run-test-ios-17:
          xcode_version: "15.2"

      # jobs that should only run for release branches
      - docs-build:
          xcode_version: '14.3.0'
          install_swiftlint: false
          <<: *release-branches
      - spm-release-build:
          <<: *release-branches
      - spm-custom-entitlement-computation-build:
          <<: *release-branches
      - spm-receipt-parser:
          <<: *release-branches
      - spm-release-build-xcode-14:
          xcode_version: '14.3.0'
          install_swiftlint: false
          <<: *release-branches
      - spm-release-build-xcode-15:
          xcode_version: '15.2'
          <<: *release-branches
      - spm-xcode-14-1:
          xcode_version: '14.1.0'
          install_swiftlint: false
          <<: *release-branches
      - spm-revenuecat-ui-ios-15:
          xcode_version: '14.3.0'
          install_swiftlint: false
          <<: *release-branches
      - spm-revenuecat-ui-ios-16:
          xcode_version: '14.3.0'
          install_swiftlint: false
          <<: *release-branches
      - spm-revenuecat-ui-ios-17:
          xcode_version: "15.2"
          <<: *release-branches
      - spm-revenuecat-ui-watchos:
          <<: *release-branches
      - run-test-macos:
          <<: *release-branches
      - run-test-ios-16:
          xcode_version: '14.3.0'
          install_swiftlint: false
          <<: *release-branches
      - run-test-ios-15:
          xcode_version: '14.3.0'
          install_swiftlint: false
          <<: *release-branches
      - run-test-watchos:
          <<: *release-branches
      - run-test-tvos:
          <<: *release-branches
      # Pre-iOS 15 requires macOS 12 which requires Xcode 14.2
      # See https://circleci.com/docs/using-macos/#supported-xcode-versions
      - run-test-ios-14:
          xcode_version: '14.2.0'
          install_swiftlint: false
          <<: *release-branches
      - run-test-ios-13:
          xcode_version: '14.2.0'
          install_swiftlint: false
          <<: *release-branches
      - build-tv-watch-and-macos:
          <<: *release-branches
      - build-visionos:
          <<: *release-branches
      - backend-integration-tests-SK1:
          <<: *release-branches
      - backend-integration-tests-SK2:
          <<: *release-branches
      - backend-integration-tests-other:
          <<: *release-branches
      - backend-integration-tests-offline:
          <<: *release-branches
      - backend-integration-tests-custom-entitlements:
          <<: *release-branches

  deploy:
    when:
      not:
        equal: [scheduled_pipeline, << pipeline.trigger_source >>]
    jobs:
      - release-checks:
          <<: *release-branches
      - installation-tests-cocoapods:
          <<: *release-branches
      - installation-tests-swift-package-manager:
          <<: *release-branches
      - installation-tests-custom-entitlement-computation-swift-package-manager:
          <<: *release-branches
      - installation-tests-receipt-parser:
          <<: *release-branches
      - installation-tests-carthage:
          <<: *release-branches
      - installation-tests-xcode-direct-integration:
          <<: *release-branches
      - hold:
          type: approval
          requires:
            - release-checks
            - installation-tests-cocoapods
            - installation-tests-swift-package-manager
            - installation-tests-custom-entitlement-computation-swift-package-manager
            - installation-tests-carthage
            - installation-tests-xcode-direct-integration
            - installation-tests-receipt-parser
          <<: *release-branches
      - tag-release-branch:
          requires:
            - hold
          <<: *release-branches
      - make-release:
          <<: *release-tags
      - push-revenuecat-pod:
          requires:
            - make-release
          <<: *release-tags
      - push-revenuecatui-pod:
          requires:
            - make-release
            - push-revenuecat-pod
          <<: *release-tags
      - deploy-to-spm:
          requires:
            - make-release
          <<: *release-tags
      - docs-deploy:
          <<: *release-tags
          xcode_version: '14.3.0'
      - deploy-purchase-tester:
          <<: *release-tags
      - notify-on-non-patch-release-branches:
          requires:
            - make-release
          <<: *non-patch-release-branches
          context: slack-secrets

  snapshot-bump:
    when:
      not:
        equal: [scheduled_pipeline, << pipeline.trigger_source >>]
    jobs:
      - prepare-next-version:
          <<: *only-main-branch

  danger:
    jobs:
      - danger

  weekly-run-workflow:
    when:
      and:
        - equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - equal: ["release-train", << pipeline.schedule.name >>]
    jobs:
      - release-train

  daily-loadshedder-integration-tests:
    when:
      and:
        - equal: [scheduled_pipeline, << pipeline.trigger_source >>]
        - equal:
            ["load_shedder_integration_tests", << pipeline.schedule.name >>]
    jobs:
      - loadshedder-integration-tests-v3
      - integration-tests-all

  manual-trigger-bump:
    when:
      equal: [bump, << pipeline.parameters.action >>]
    jobs:
      - release-train

  # to trigger tests manually, log into circleCI, select the project, a branch, and then click "Trigger Pipeline"
  # and add a parameter called "run-manual-tests"
  manual-test-workflow:
    when:
      equal: ["run-manual-tests", << pipeline.parameters.action >>]
    jobs:
      - backend-integration-tests-SK1
      - backend-integration-tests-SK2
      - backend-integration-tests-custom-entitlements
      - backend-integration-tests-other
      - build-tv-watch-and-macos
      - build-visionos
      - docs-build
      - run-test-ios-14
      - run-test-ios-15
      - run-test-ios-16
      - run-test-macos
      - run-test-tvos
      - run-test-watchos
      - spm-custom-entitlement-computation-build
      - spm-receipt-parser
      - spm-release-build
      - spm-release-build-xcode-14
      - spm-release-build-xcode-15
      - spm-revenuecat-ui-ios-15
      - spm-revenuecat-ui-ios-16
      - spm-revenuecat-ui-ios-17
      - spm-revenuecat-ui-watchos